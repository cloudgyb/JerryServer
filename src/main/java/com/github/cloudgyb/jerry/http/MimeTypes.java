package com.github.cloudgyb.jerry.http;

import java.util.Map;

/**
 * @author geng
 * @since 2025/02/28 16:51:20
 */
public final class MimeTypes {
    private static final Map<String, String> mimeTypes;

    static {
        mimeTypes = Map.<String, String>ofEntries(
                Map.entry("abs", "audio/x-mpeg"),
                Map.entry("ai", "application/postscript"),
                Map.entry("aif", "audio/x-aiff"),
                Map.entry("aifc", "audio/x-aiff"),
                Map.entry("aiff", "audio/x-aiff"),
                Map.entry("aim", "application/x-aim"),
                Map.entry("art", "image/x-jg"),
                Map.entry("asf", "video/x-ms-asf"),
                Map.entry("asx", "video/x-ms-asf"),
                Map.entry("au", "audio/basic"),
                Map.entry("avi", "video/x-msvideo"),
                Map.entry("avx", "video/x-rad-screenplay"),
                Map.entry("bcpio", "application/x-bcpio"),
                Map.entry("bin", "application/octet-stream"),
                Map.entry("bmp", "image/bmp"),
                Map.entry("body", "text/html"),
                Map.entry("cdf", "application/x-cdf"),
                Map.entry("cer", "application/pkix-cert"),
                Map.entry("class", "application/java"),
                Map.entry("cpio", "application/x-cpio"),
                Map.entry("csh", "application/x-csh"),
                Map.entry("css", "text/css"),
                Map.entry("dib", "image/bmp"),
                Map.entry("doc", "application/msword"),
                Map.entry("dtd", "application/xml-dtd"),
                Map.entry("dv", "video/x-dv"),
                Map.entry("dvi", "application/x-dvi"),
                Map.entry("eot", "application/vnd.ms-fontobject"),
                Map.entry("eps", "application/postscript"),
                Map.entry("etx", "text/x-setext"),
                Map.entry("exe", "application/octet-stream"),
                Map.entry("gif", "image/gif"),
                Map.entry("gtar", "application/x-gtar"),
                Map.entry("gz", "application/x-gzip"),
                Map.entry("hdf", "application/x-hdf"),
                Map.entry("hqx", "application/mac-binhex40"),
                Map.entry("htc", "text/x-component"),
                Map.entry("htm", "text/html"),
                Map.entry("html", "text/html"),
                Map.entry("ief", "image/ief"),
                Map.entry("jad", "text/vnd.sun.j2me.app-descriptor"),
                Map.entry("jar", "application/java-archive"),
                Map.entry("java", "text/x-java-source"),
                Map.entry("jnlp", "application/x-java-jnlp-file"),
                Map.entry("jpe", "image/jpeg"),
                Map.entry("jpeg", "image/jpeg"),
                Map.entry("jpg", "image/jpeg"),
                Map.entry("js", "application/javascript"),
                Map.entry("jsf", "text/plain"),
                Map.entry("json", "application/json"),
                Map.entry("jspf", "text/plain"),
                Map.entry("kar", "audio/midi"),
                Map.entry("latex", "application/x-latex"),
                Map.entry("m3u", "audio/x-mpegurl"),
                Map.entry("mac", "image/x-macpaint"),
                Map.entry("man", "text/troff"),
                Map.entry("mathml", "application/mathml+xml"),
                Map.entry("me", "text/troff"),
                Map.entry("mid", "audio/midi"),
                Map.entry("midi", "audio/midi"),
                Map.entry("mif", "application/x-mif"),
                Map.entry("mov", "video/quicktime"),
                Map.entry("movie", "video/x-sgi-movie"),
                Map.entry("mp1", "audio/mpeg"),
                Map.entry("mp2", "audio/mpeg"),
                Map.entry("mp3", "audio/mpeg"),
                Map.entry("mp4", "video/mp4"),
                Map.entry("mpa", "audio/mpeg"),
                Map.entry("mpe", "video/mpeg"),
                Map.entry("mpeg", "video/mpeg"),
                Map.entry("mpega", "audio/x-mpeg"),
                Map.entry("mpg", "video/mpeg"),
                Map.entry("mpv2", "video/mpeg2"),
                Map.entry("ms", "application/x-wais-source"),
                Map.entry("nc", "application/x-netcdf"),
                Map.entry("oda", "application/oda"),
                Map.entry("odb", "application/vnd.oasis.opendocument.database"),
                Map.entry("odc", "application/vnd.oasis.opendocument.chart"),
                Map.entry("odf", "application/vnd.oasis.opendocument.formula"),
                Map.entry("odg", "application/vnd.oasis.opendocument.graphics"),
                Map.entry("odi", "application/vnd.oasis.opendocument.image"),
                Map.entry("odm", "application/vnd.oasis.opendocument.text-master"),
                Map.entry("odp", "application/vnd.oasis.opendocument.presentation"),
                Map.entry("ods", "application/vnd.oasis.opendocument.spreadsheet"),
                Map.entry("odt", "application/vnd.oasis.opendocument.text"),
                Map.entry("otg", "application/vnd.oasis.opendocument.graphics-template"),
                Map.entry("oth", "application/vnd.oasis.opendocument.text-web"),
                Map.entry("otp", "application/vnd.oasis.opendocument.presentation-template"),
                Map.entry("ots", "application/vnd.oasis.opendocument.spreadsheet-template "),
                Map.entry("ott", "application/vnd.oasis.opendocument.text-template"),
                Map.entry("ogx", "application/ogg"),
                Map.entry("ogv", "video/ogg"),
                Map.entry("oga", "audio/ogg"),
                Map.entry("ogg", "audio/ogg"),
                Map.entry("otf", "application/x-font-opentype"),
                Map.entry("spx", "audio/ogg"),
                Map.entry("flac", "audio/flac"),
                Map.entry("anx", "application/annodex"),
                Map.entry("axa", "audio/annodex"),
                Map.entry("axv", "video/annodex"),
                Map.entry("xspf", "application/xspf+xml"),
                Map.entry("pbm", "image/x-portable-bitmap"),
                Map.entry("pct", "image/pict"),
                Map.entry("pdf", "application/pdf"),
                Map.entry("pgm", "image/x-portable-graymap"),
                Map.entry("pic", "image/pict"),
                Map.entry("pict", "image/pict"),
                Map.entry("pls", "audio/x-scpls"),
                Map.entry("png", "image/png"),
                Map.entry("pnm", "image/x-portable-anymap"),
                Map.entry("pnt", "image/x-macpaint"),
                Map.entry("ppm", "image/x-portable-pixmap"),
                Map.entry("ppt", "application/vnd.ms-powerpoint"),
                Map.entry("pps", "application/vnd.ms-powerpoint"),
                Map.entry("ps", "application/postscript"),
                Map.entry("psd", "image/vnd.adobe.photoshop"),
                Map.entry("qt", "video/quicktime"),
                Map.entry("qti", "image/x-quicktime"),
                Map.entry("qtif", "image/x-quicktime"),
                Map.entry("ras", "image/x-cmu-raster"),
                Map.entry("rdf", "application/rdf+xml"),
                Map.entry("rgb", "image/x-rgb"),
                Map.entry("rm", "application/vnd.rn-realmedia"),
                Map.entry("roff", "text/troff"),
                Map.entry("rtf", "application/rtf"),
                Map.entry("rtx", "text/richtext"),
                Map.entry("sfnt", "application/font-sfnt"),
                Map.entry("sh", "application/x-sh"),
                Map.entry("shar", "application/x-shar"),
                Map.entry("sit", "application/x-stuffit"),
                Map.entry("snd", "audio/basic"),
                Map.entry("src", "application/x-wais-source"),
                Map.entry("sv4cpio", "application/x-sv4cpio"),
                Map.entry("sv4crc", "application/x-sv4crc"),
                Map.entry("svg", "image/svg+xml"),
                Map.entry("svgz", "image/svg+xml"),
                Map.entry("swf", "application/x-shockwave-flash"),
                Map.entry("t", "text/troff"),
                Map.entry("tar", "application/x-tar"),
                Map.entry("tcl", "application/x-tcl"),
                Map.entry("tex", "application/x-tex"),
                Map.entry("texi", "application/x-texinfo"),
                Map.entry("texinfo", "application/x-texinfo"),
                Map.entry("tif", "image/tiff"),
                Map.entry("tiff", "image/tiff"),
                Map.entry("tr", "text/troff"),
                Map.entry("tsv", "text/tab-separated-values"),
                Map.entry("ttf", "application/x-font-ttf"),
                Map.entry("txt", "text/plain"),
                Map.entry("ulw", "audio/basic"),
                Map.entry("ustar", "application/x-ustar"),
                Map.entry("vxml", "application/voicexml+xml"),
                Map.entry("xbm", "image/x-xbitmap"),
                Map.entry("xht", "application/xhtml+xml"),
                Map.entry("xhtml", "application/xhtml+xml"),
                Map.entry("xls", "application/vnd.ms-excel"),
                Map.entry("xml", "application/xml"),
                Map.entry("xpm", "image/x-xpixmap"),
                Map.entry("xsl", "application/xml"),
                Map.entry("xslt", "application/xslt+xml"),
                Map.entry("xul", "application/vnd.mozilla.xul+xml"),
                Map.entry("xwd", "image/x-xwindowdump"),
                Map.entry("vsd", "application/vnd.visio"),
                Map.entry("wav", "audio/x-wav"),
                Map.entry("wbmp", "image/vnd.wap.wbmp"),
                Map.entry("wml", "text/vnd.wap.wml"),
                Map.entry("wmlc", "application/vnd.wap.wmlc"),
                Map.entry("wmls", "text/vnd.wap.wmlsc"),
                Map.entry("wmlscriptc", "application/vnd.wap.wmlscriptc"),
                Map.entry("wmv", "video/x-ms-wmv"),
                Map.entry("woff", "application/font-woff"),
                Map.entry("woff2", "application/font-woff2"),
                Map.entry("wrl", "model/vrml"),
                Map.entry("wspolicy", "application/wspolicy+xml"),
                Map.entry("z", "application/x-compress"),
                Map.entry("zip", "application/zip"));
    }

    /**
     * 根据扩展名获取 mime (用于 Content-Type)
     *
     * @param extension 文件扩展名，不包括 "."
     */
    public static String get(String extension) {
        return mimeTypes.get(extension);
    }
}
